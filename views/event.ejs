<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>Create Event â€” SAMPARK</title>
    <meta name="description" content="Schedule a new event on the SAMPARK alumni nexus."/>
    <link rel="icon" href="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='64' height='64'%3E%3Cdefs%3E%3ClinearGradient id='g' x1='0' y1='0' x2='1' y2='1'%3E%3Cstop offset='0%25' stop-color='%23d4af37'/%3E%3Cstop offset='100%25' stop-color='%23a16207'/%3E%3C/linearGradient%3E%3C/defs%3E%3Ccircle cx='32' cy='32' r='30' fill='url(%23g)'/%3E%3Ctext x='32' y='42' font-size='32' text-anchor='middle' fill='white' font-family='Arial Black'%3EA%3C/text%3E%3C/svg%3E" />

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Lato:wght@400;700&family=Lora:wght@600;700&display=swap" rel="stylesheet">

    <!-- Libraries -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/lucide@latest"></script>

    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        background: '#f8f5f2',
                        foreground: '#1f1c18',
                        card: '#ffffff',
                        'card-foreground': '#1f1c18',
                        primary: '#a16207',
                        'primary-foreground': '#ffffff',
                        secondary: '#b99553',
                        accent: '#34d399',
                        border: 'rgba(0, 0, 0, 0.08)',
                        ring: 'rgba(161, 98, 7, 0.4)'
                    },
                    fontFamily: {
                        sans: ['Lato', 'sans-serif'],
                        serif: ['Lora', 'serif']
                    },
                    boxShadow: {
                        'soft': '0 4px 12px rgba(0, 0, 0, 0.05)',
                        'lift': '0 10px 25px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1)',
                    },
                    keyframes: {
                        'fade-in-up': { '0%': { opacity: 0, transform: 'translateY(10px)' }, '100%': { opacity: 1, transform: 'translateY(0)' } },
                        'backgroundShift': {
                            '0%, 100%': { backgroundPosition: '0% 50%' },
                            '50%': { backgroundPosition: '100% 50%' },
                        }
                    },
                    animation: {
                        'fade-in-up': 'fade-in-up 0.5s ease-out forwards',
                        'backgroundShift': 'backgroundShift 25s ease infinite',
                    }
                }
            }
        }
    </script>

    <style>
        html { scroll-behavior: smooth; }
        body {
            background: linear-gradient(-45deg, #f8f5f2, #fffefc, #fef8f0, #f8f5f2);
            background-size: 400% 400%;
            animation: backgroundShift 25s ease infinite;
        }
        .glass-header {
            background: rgba(255, 253, 250, 0.85);
            backdrop-filter: blur(12px); -webkit-backdrop-filter: blur(12px);
            border-bottom: 1px solid var(--tw-color-border);
        }
        #particle-canvas { position: fixed; top: 0; left: 0; width: 100%; height: 100%; z-index: -1; opacity: 0.6; }
    </style>
</head>
<body class="bg-background font-sans antialiased text-foreground">
    <canvas id="particle-canvas"></canvas>

     <header class="fixed top-0 inset-x-0 z-40 glass-header">
        <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
            <div class="relative flex h-16 items-center justify-center">
                <div class="absolute left-0">
                     <a href="/alumni/dashboard" class="flex items-center gap-2 text-gray-600 hover:text-primary transition-colors font-semibold">
                        <i data-lucide="arrow-left" class="w-5 h-5"></i>
                        Back to Dashboard
                    </a>
                </div>
                <div class="flex items-center">
                    <h1 class="text-3xl font-serif font-bold text-primary">SAMPARK</h1>
                </div>
            </div>
        </div>
    </header>

    <main class="min-h-screen flex items-center justify-center pt-24 pb-12 px-4">
        <div class="w-full max-w-2xl bg-card rounded-xl shadow-lift p-8 animate-fade-in-up">
            <div class="text-center">
                <h2 class="text-3xl font-serif font-bold text-foreground">Create an Event</h2>
                <p class="text-gray-500 mt-2">Bring the alumni community together with a new event.</p>
            </div>
            
            <form action="/alumni/event" method="POST" class="mt-8 space-y-6">
                <div>
                    <label for="title" class="block text-sm font-semibold text-gray-700 mb-2">Event Title</label>
                    <input type="text" id="title" name="title" class="w-full px-4 py-2 border border-border rounded-lg focus:outline-none focus:ring-2 focus:ring-ring transition-shadow" placeholder="e.g., Annual Alumni Meetup" required />
                </div>

                <div>
                    <label for="description" class="block text-sm font-semibold text-gray-700 mb-2">Description</label>
                    <textarea id="description" name="description" rows="4" class="w-full px-4 py-2 border border-border rounded-lg focus:outline-none focus:ring-2 focus:ring-ring transition-shadow" placeholder="Provide a brief description of the event."></textarea>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <label for="date" class="block text-sm font-semibold text-gray-700 mb-2">Date & Time</label>
                        <input type="datetime-local" id="date" name="date" class="w-full px-4 py-2 border border-border rounded-lg focus:outline-none focus:ring-2 focus:ring-ring transition-shadow" required />
                    </div>
                    <div>
                        <label for="event-type" class="block text-sm font-semibold text-gray-700 mb-2">Event Type</label>
                        <select id="event-type" name="eventType" class="w-full px-4 py-2 border border-border rounded-lg focus:outline-none focus:ring-2 focus:ring-ring transition-shadow bg-white">
                            <option>Webinar</option>
                            <option>Networking Session</option>
                            <option>Workshop</option>
                            <option>In-Person Meetup</option>
                        </select>
                    </div>
                </div>

                <div>
                    <label for="gmeetLink" class="block text-sm font-semibold text-gray-700 mb-2">Google Meet Link</label>
                    <input type="url" id="gmeetLink" name="gmeetLink" class="w-full px-4 py-2 border border-border rounded-lg focus:outline-none focus:ring-2 focus:ring-ring transition-shadow" placeholder="https://meet.google.com/..." required />
                </div>
                
                <div class="pt-6 border-t border-border flex justify-between items-center">
                    <a href="/alumni/dashboard" class="text-gray-600 hover:text-primary transition-colors font-semibold">Cancel</a>
                    <button type="submit" class="px-6 py-2.5 bg-primary text-primary-foreground rounded-lg shadow-soft hover:bg-primary/90 transition-colors font-bold">Create Event</button>
                </div>
            </form>
        </div>
    </main>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            lucide.createIcons();
            
            // Particle Animation Script
            const canvas = document.getElementById('particle-canvas');
            const ctx = canvas.getContext('2d');
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
            let particles = [];
            const particleCount = 50;
            const particleColor = 'rgba(161, 98, 7, 0.5)';

            class Particle {
                constructor(x, y) { this.x = x; this.y = y; this.size = Math.random() * 2 + 1; this.speedX = Math.random() * 1 - 0.5; this.speedY = Math.random() * 1 - 0.5; }
                update() { this.x += this.speedX; this.y += this.speedY; if (this.size > 0.1) this.size -= 0.01; }
                draw() { ctx.fillStyle = particleColor; ctx.beginPath(); ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2); ctx.fill(); }
            }
            function initParticles() {
                for (let i = 0; i < particleCount; i++) { particles.push(new Particle(Math.random() * canvas.width, Math.random() * canvas.height)); }
            }
            function animateParticles() {
                ctx.clearRect(0, 0, canvas.width, canvas.height);
                for (let i = 0; i < particles.length; i++) {
                    particles[i].update(); particles[i].draw();
                    if (particles[i].size <= 0.1) { particles.splice(i, 1); i--; particles.push(new Particle(Math.random() * canvas.width, Math.random() * canvas.height)); }
                }
                requestAnimationFrame(animateParticles);
            }
            initParticles();
            animateParticles();
            window.addEventListener('resize', () => { canvas.width = window.innerWidth; canvas.height = window.innerHeight; particles = []; initParticles(); });
        });
    </script>
</body>
</html>

<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Ask for Referral â€” SAMPARK</title>
    <meta
      name="description"
      content="SAMPARK is a world-class alumni nexus for elite networking, career acceleration, and community impact."
    />
    <link
      rel="icon"
      href="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='64' height='64'%3E%3Cdefs%3E%3ClinearGradient id='g' x1='0' y1='0' x2='1' y2='1'%3E%3Cstop offset='0%25' stop-color='%23d4af37'/%3E%3Cstop offset='100%25' stop-color='%23a16207'/%3E%3C/linearGradient%3E%3C/defs%3E%3Ccircle cx='32' cy='32' r='30' fill='url(%23g)'/%3E%3Ctext x='32' y='42' font-size='32' text-anchor='middle' fill='white' font-family='Arial Black'%3EA%3C/text%3E%3C/svg%3E"
    />

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Playfair+Display:wght@700;800&display=swap"
      rel="stylesheet"
    />

    <!-- Libraries -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/lucide@latest"></script>

    <script>
      tailwind.config = {
        theme: {
          extend: {
            colors: {
              background: "#f8f5f2",
              foreground: "#1f1c18",
              card: "#ffffff",
              "card-foreground": "#1f1c18",
              primary: "#a16207",
              "primary-foreground": "#ffffff",
              secondary: "#b99553",
              border: "rgba(0, 0, 0, 0.08)",
            },
            fontFamily: {
              sans: ["Inter", "sans-serif"],
              serif: ["Playfair Display", "serif"],
            },
            boxShadow: {
              soft: "0 4px 12px rgba(0, 0, 0, 0.05)",
              lift: "0 10px 25px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1)",
              glow: "0 0 20px rgba(161, 98, 7, 0.15)",
            },
            keyframes: {
              "fade-in-up": {
                "0%": { opacity: 0, transform: "translateY(20px)" },
                "100%": { opacity: 1, transform: "translateY(0)" },
              },
              backgroundShift: {
                "0%, 100%": { backgroundPosition: "0% 50%" },
                "50%": { backgroundPosition: "100% 50%" },
              },
            },
            animation: {
              "fade-in-up": "fade-in-up 0.8s ease-out forwards",
              backgroundShift: "backgroundShift 25s ease infinite",
            },
          },
        },
      };
    </script>

    <style>
      html {
        scroll-behavior: smooth;
      }
      body {
        background: linear-gradient(-45deg, #f8f5f2, #fffefc, #fef8f0, #f8f5f2);
        background-size: 400% 400%;
        animation: backgroundShift 25s ease infinite;
      }
      .glass-header {
        background: rgba(255, 253, 250, 0.85);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border-bottom: 1px solid var(--tw-color-border);
      }
      #particle-canvas {
        position: fixed; top: 0; left: 0; width: 100%; height: 100%; z-index: -1; opacity: 0.6;
      }
      .nav-link {
        transition: all 0.2s ease-in-out;
        border-bottom: 2px solid transparent;
      }
      .nav-link.active,
      .nav-link:hover {
        color: var(--tw-color-primary);
        border-bottom-color: var(--tw-color-primary);
      }
    </style>
  </head>
  <body class="bg-background font-sans antialiased text-foreground">
    <canvas id="particle-canvas"></canvas>

    <header class="fixed top-0 inset-x-0 z-40 glass-header">
      <div class="mx-auto max-w-screen-xl px-4 sm:px-6 lg:px-8">
        <div class="relative flex h-16 items-center justify-between">
          <a href="/" class="text-3xl font-serif font-bold text-primary">SAMPARK</a>
          <a
            href="/logout"
            class="px-4 py-2 rounded-md bg-primary text-primary-foreground hover:bg-primary/90 transition-colors font-semibold shadow-soft flex items-center gap-2"
          >
            <i data-lucide="log-out" class="w-4 h-4"></i>
            Logout
          </a>
        </div>
      </div>
    </header>

    <main class="pt-16">
      <nav class="bg-card border-b border-border px-4 py-2 sticky top-16 z-30">
        <div class="max-w-screen-xl mx-auto flex justify-center items-center">
          <div class="flex gap-4 overflow-x-auto">
             <a href="/student/dashboard" class="nav-link flex-shrink-0 flex items-center gap-2 px-3 py-2 text-sm font-semibold"><i data-lucide="layout-dashboard"></i>Dashboard</a>
            <a href="/student/connections" class="nav-link flex-shrink-0 flex items-center gap-2 px-3 py-2 text-sm font-semibold"><i data-lucide="users"></i>Connections</a>
            <a href="/student/posts" class="nav-link flex-shrink-0 flex items-center gap-2 px-3 py-2 text-sm font-semibold"><i data-lucide="newspaper"></i>Posts</a>
            <a href="/student/referrals" class="nav-link active flex-shrink-0 flex items-center gap-2 px-3 py-2 text-sm font-semibold"><i data-lucide="handshake"></i>Ask for Referral</a>
            <a href="/student/map" class="nav-link flex-shrink-0 flex items-center gap-2 px-3 py-2 text-sm font-semibold"><i data-lucide="map"></i>Alumni Map</a>
            <a href="/student/events" class="nav-link flex-shrink-0 flex items-center gap-2 px-3 py-2 text-sm font-semibold"><i data-lucide="calendar"></i>Events</a>
            <a href="/student/profile" class="nav-link flex-shrink-0 flex items-center gap-2 px-3 py-2 text-sm font-semibold"><i data-lucide="user-circle"></i>My Profile</a>
          </div>
        </div>
      </nav>

      <div class="max-w-3xl mx-auto p-6 md:p-8">
        <div class="mb-8">
            <h2 class="text-3xl font-serif font-bold text-foreground">Request a Referral</h2>
            <p class="text-gray-500 mt-1">Leverage your network to land your next career opportunity.</p>
        </div>
        
        <form class="bg-card rounded-xl shadow-soft p-8 space-y-6">
            <div>
                <label for="alumnus" class="block text-sm font-medium text-gray-700 mb-1">Select Alumnus</label>
                <select id="alumnus" name="alumnus" class="w-full border border-border rounded-md bg-background px-4 py-2.5 focus:ring-2 focus:ring-primary focus:outline-none">
                    <option disabled selected>Choose from your connections...</option>
                    <% if (connections && connections.length > 0) { %>
                        <% connections.forEach(alumnus => { %>
                            <option value="<%= alumnus._id %>"><%= alumnus.name %> - <%= alumnus.designation %> at <%= alumnus.currentCompany %></option>
                        <% }); %>
                    <% } %>
                </select>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                     <label for="company" class="block text-sm font-medium text-gray-700 mb-1">Company Name</label>
                     <input type="text" id="company" name="company" placeholder="e.g., Google" class="w-full border border-border rounded-md bg-background px-4 py-2.5 focus:ring-2 focus:ring-primary focus:outline-none">
                </div>
                 <div>
                     <label for="job-link" class="block text-sm font-medium text-gray-700 mb-1">Job Link or ID</label>
                     <input type="text" id="job-link" name="jobLink" placeholder="e.g., https://careers.google.com/..." class="w-full border border-border rounded-md bg-background px-4 py-2.5 focus:ring-2 focus:ring-primary focus:outline-none">
                </div>
            </div>
             <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Attach Your Resume</label>
                <label for="resume-upload" class="flex items-center gap-4 px-4 py-3 border-2 border-border border-dashed rounded-lg cursor-pointer bg-background/50 hover:bg-background">
                    <i data-lucide="upload-cloud" class="w-8 h-8 text-gray-400"></i>
                    <div>
                        <span class="font-semibold text-primary">Click to upload your resume</span>
                        <p id="file-name" class="text-xs text-gray-500">PDF, DOCX (MAX. 2MB)</p>
                    </div>
                </label>
                <input id="resume-upload" name="resume" type="file" class="hidden" />
            </div>
             <div>
                <label for="message" class="block text-sm font-medium text-gray-700 mb-1">Personalized Message</label>
                <textarea id="message" name="message" rows="5" placeholder="Write a brief message to the alumnus explaining why you're a good fit for the role..." class="w-full border border-border rounded-md bg-background px-4 py-2.5 focus:ring-2 focus:ring-primary focus:outline-none"></textarea>
            </div>
            <div class="flex justify-end">
                <button type="submit" class="px-8 py-2.5 rounded-lg bg-primary text-primary-foreground font-semibold hover:bg-primary/90 transition-colors shadow-soft">
                    Send Request
                </button>
            </div>
        </form>
      </div>
    </main>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        lucide.createIcons();
        
        document.getElementById('resume-upload').onchange = function () {
            const fileName = this.files[0] ? this.files[0].name : "PDF, DOCX (MAX. 2MB)";
            document.getElementById('file-name').textContent = fileName;
        };
        
        const canvas = document.getElementById("particle-canvas");
        const ctx = canvas.getContext("2d");
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
        let particles = [];
        const particleColor = "rgba(161, 98, 7, 0.4)";
        class Particle { constructor(x, y) { this.x = x; this.y = y; this.size = Math.random() * 1.5 + 1; this.speedX = Math.random() * 0.3 - 0.15; this.speedY = Math.random() * 0.3 - 0.15; } update() { this.x += this.speedX; this.y += this.speedY; if (this.size > 0.1) this.size -= 0.005; } draw() { ctx.fillStyle = particleColor; ctx.beginPath(); ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2); ctx.fill(); } }
        function initParticles() { for (let i = 0; i < 50; i++) { particles.push(new Particle(Math.random() * canvas.width, Math.random() * canvas.height)); } }
        function animateParticles() { if (!canvas) return; ctx.clearRect(0, 0, canvas.width, canvas.height); for (let i = 0; i < particles.length; i++) { particles[i].update(); particles[i].draw(); if (particles[i].size <= 0.1) { particles.splice(i, 1); i--; particles.push(new Particle(Math.random() * canvas.width, Math.random() * canvas.height)); } } requestAnimationFrame(animateParticles); }
        initParticles(); animateParticles();
        window.addEventListener("resize", () => { if (canvas) { canvas.width = window.innerWidth; canvas.height = window.innerHeight; particles = []; initParticles(); } });
      });
    </script>
  </body>
</html>
